 Want to add all the users restaurants to their show page
 <% if @user.restaurants %>
    <h4>Here are the restaurants you created</h4>
<br>
        <ul>
            <%= @user.restaurants.each do |restaurant| %>
            <li><%= restaurant.restaurant_name %></li>
            <% end %>
        </ul>
<% else %>  
    <h4> You have not added any Restaurants yet.</h4>
<% end %>

 On restaurant Index page - show which user created that restaurant
    <li>Added by: <%= restaurant.users.name %></li> ? is user "User"
 
 
 validates_uniqueness_of :restaurant_id, :scope => :user_id, message: "has already been reviewed."
 Validates that a user already reviewed this restaurant??
 
 <p>Pick a Category that already exists: </p>
    <%= f.label :category %>
    <%= f.collection_select :category_id, Category.all, :id, :name%>
    <br>
    NESTED FORMM
     <p>Or create a new Category: </p>
     <%= f.fields_for :category do |c| %>
     <%= c.label :category_name %>             (has to attribtes on the category tabel)
     <%= c.text_field "Category Attributes", :category_name %>
     <% end %>

Then in the new action for categories

in the restaurant controller
     def new
          @category = Category.new
          @category.build.category_name
     end

     private

     def category_params
          params.require(:category).permit(:restaurant_name, :address... , :category_attributes)
     end

     then in the category model
          accept_nested_attributes_for :category


In reviews/new.html.erb
make a helper method for:
<% if params[:restaurant_id] %>
    <h2>Create a new review for:   <%= @restaurant.restaurant_name %></h2>
<% else %>  
    <h2>Create a review: </h2>
<% end %>

If you have the restaurnt id - write a review for them
If we dont have the restaurant id - give a drop down in the form of other restaurants






            Prefix Verb   URI Pattern                  Controller#Action
            root GET    / sessions#welcome
           login GET    /login(.:format)                  sessions#new
                 POST   /login(.:format)                  sessions#create
          signup GET    /signup(.:format)                 users#new
          logout DELETE /logout(.:format)                 sessions#destroy
         reviews GET    /reviews(.:format)                reviews#index
                 POST   /reviews(.:format)                reviews#create
      new_review GET    /reviews/new(.:format)            reviews#new
     edit_review GET    /reviews/:id/edit(.:format)       reviews#edit
          review GET    /reviews/:id(.:format)            reviews#show
                 PATCH  /reviews/:id(.:format)            reviews#update
                 PUT    /reviews/:id(.:format)            reviews#update
                 DELETE /reviews/:id(.:format)            reviews#destroy
     restaurants GET    /restaurants(.:format)            restaurants#index
                 POST   /restaurants(.:format)            restaurants#create
  new_restaurant GET    /restaurants/new(.:format)        restaurants#new
 edit_restaurant GET    /restaurants/:id/edit(.:format)   restaurants#edit
      restaurant GET    /restaurants/:id(.:format)        restaurants#show
                 PATCH  /restaurants/:id(.:format)        restaurants#update
                 PUT    /restaurants/:id(.:format)        restaurants#update
                 DELETE /restaurants/:id(.:format)        restaurants#destroy
           users GET    /users(.:format)                  users#index
                 POST   /users(.:format)                  users#create
        new_user GET    /users/new(.:format)              users#new
       edit_user GET    /users/:id/edit(.:format)         users#edit
            user GET    /users/:id(.:format)              users#show
                 PATCH  /users/:id(.:format)              users#update
                 PUT    /users/:id(.:format)              users#update
                 DELETE /users/:id(.:format)              users#destroy